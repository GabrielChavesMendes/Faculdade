
// Guia_1505.txt 
// 855842 - Mateus Resende Ottoni
//
// Objetivo: dado03 = dado01 * 8 + dado02 / 2 
// Somar 8 vezes o primeiro número mais metade do segundo
//
// Armazenar o primeiro dado	em 0100, por exemplo e atualizar as instruções 
// Armazenar o segundo dado	em 0101
// Armazenar o resultado	em 0103
 
// Área de código	; Significado		// Comentário
  LXI	H,dado1		; HL <- addr(dado1)	// Endereço do dado1
  MOV	A,M		; A  <- MEM [HL]	// A = MEM [dado1]
  ADD	M		; A  <- A + MEM [HL]	// A = A + MEM [dado1]
  STA	dado1		; MEM [dado1] <- A	// MEM [dado1] = A
  MOV	A,M		; A  <- MEM [HL]	// A = MEM [dado1]
  ADD	M		; A  <- A + MEM [HL]	// A = A + MEM [dado1]
  STA	dado1		; MEM [dado1] <- A	// MEM [dado1] = A
  MOV	A,M		; A  <- MEM [HL]	// A = MEM [dado1]
  ADD	M		; A  <- A + MEM [HL]	// A = A + MEM [dado1]
  STA	dado1		; MEM [dado1] <- A	// MEM [dado1] = A
  INX	H		; HL <- HL+1		// Endereço do dado2
  MOV	A,M		; A  <- MEM [HL]	// A = MEM [dado2]
  ANI   FE		;			// Máscara para eliminar último dígito
  RAR			;			// Shift Right
  STA	dado2		; MEM [dado2] <- A	// MEM [dado2] = A
  LXI	H,dado1		; HL <- addr(dado1)	// Endereço do dado1
  MOV	A,M		; A  <- MEM [HL]	// A = MEM [dado1]
  INX	H		; HL <- HL+1		// Endereço do dado2
  ADD	M		; A  <- A + MEM [HL]	// A = A + MEM [dado2]
  STA	dado3		; MEM [dado3] <- A	// MEM [dado3] = A
  HLT			; halt			// Parar
 
; Área de dados 
; dado1:  22h  ; primeiro dado	em hexadecimal
; dado2:  23h  ; segundo dado	em hexadecimal
; dado3:  20h  ; resultado	em hexadecimal