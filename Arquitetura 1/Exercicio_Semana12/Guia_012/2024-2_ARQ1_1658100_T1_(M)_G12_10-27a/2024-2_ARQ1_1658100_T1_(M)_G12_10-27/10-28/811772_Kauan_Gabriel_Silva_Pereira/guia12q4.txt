module RAM4x8 (
    input wire [1:0] addr,        // Seleção do endereço (2 bits)
    input wire [7:0] data_in,     // Dados de entrada (8 bits)
    input wire we,                // Write Enable
    output reg [7:0] data_out      // Dados de saída (8 bits)
);
    reg [7:0] RAM0 [1:0]; // RAM 0: Endereços 0 e 1
    reg [7:0] RAM1 [1:0]; // RAM 1: Endereços 2 e 3

    always @(posedge we) begin
        if (addr[1] == 0) begin
            RAM0[addr[0]] <= data_in; // Escreve no endereço 0 ou 1
        end else begin
            RAM1[addr[0]] <= data_in; // Escreve no endereço 2 ou 3
        end
    end

    always @(addr) begin
        if (addr[1] == 0) begin
            data_out = RAM0[addr[0]]; // Lê do endereço 0 ou 1
        end else begin
            data_out = RAM1[addr[0]]; // Lê do endereço 2 ou 3
        end
    end
endmodule
