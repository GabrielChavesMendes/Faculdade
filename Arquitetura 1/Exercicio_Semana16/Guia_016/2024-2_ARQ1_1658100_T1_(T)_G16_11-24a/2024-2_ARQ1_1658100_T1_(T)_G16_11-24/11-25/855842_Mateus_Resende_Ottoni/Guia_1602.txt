
// Guia_1602.txt 
// 855842 - Mateus Resende Ottoni
//
// Objetivo: dado03 = dado01 / dado02
// Calcular o quociente inteiro (IDIV) de dois dados com 8 bits cada
//
 
// Área de código		// Comentário 
	JMP	MAIN		// Ir para a função principal

	
 F_DIV:	MOV	A,D		// A = D

	SUB	C		// A = A-C
	MOV	D,A		// D = A
	
	LXI	H,0054h		// HL = 0054h // Contador
	MOV	A,M		// A = MEM[HL]
	ADI	1		// Incrementar contador por 1
	STA	0054h		// Guardar contador atualizado

	MOV	A,D		// A = D
	CMP	C		// Comparar o resto com o segundo valor
	JP	F_DIV		// Repetir se ainda for maior

	LXI	H,0054h		// HL = 0054h // Contador
	MOV	A,M		// A = MEM[HL]
	RET			// Return

 MAIN:
	MVI	A,00		// A = 0
	STA	0054h		// Guardar valor nulo no contador

	LXI	H,0052h		// HL = 0052h // Dado 1
	MOV	B,M		// B = MEM [HL]
	INX	H		// HL = HL+1  // Dado 2
	MOV	C,M		// C = MEM [HL]
	MOV	D,B		// D = B // Variável para acumular
				//       //  restos
 C_DIV: CALL	F_DIV		// A = F_DIV(B, C)
	STA	0050h		// MEM[0050] = A
	HLT			// } 
 END: 


; Área de dados 
; dado1:  52h  ; primeiro dado	 em hexadecimal
; dado2:  53h  ; segundo dado	 em hexadecimal
; dado3:  54h  ; contador	 em hexadecimal
; dado4:  50h  ; resultado	 em hexadecimal
