// Guia_1607.txt
// 803338- Fernando Theodoro Porto de Paula Dias
//
// Calculate the factorial of an 8-bit number
// Resultado: FAT(dado) armazenado em 0052h

JMP MAIN          // Pular para o início do programa

// Função FAT: Calcula o fatorial de um número por somas sucessivas
F_FAT: POP H       // Salvar endereço de retorno
POP C              // Pegar o parâmetro (C = número para calcular o fatorial)
MVI A,01           // A = 1 (inicializar acumulador do fatorial)
MOV B,C            // B = C (cópia para multiplicação)

FAT_LOOP: CMP B    // Comparar B com 0
JZ END_FAT         // Se B = 0, terminar
MOV D,A            // D = A (armazenar acumulador atual)
FAT_SUM: ADD D     // A = A + D (realizar multiplicação como somas sucessivas)
DCR C              // Decrementar o contador interno
JNZ FAT_SUM        // Repetir até C = 0
DCR B              // Decrementar o número atual (B = B - 1)
JMP FAT_LOOP       // Repetir o loop externo

END_FAT: PUSH H    // Restaurar endereço de retorno
RET                // Retornar com o resultado em A

// Programa principal
MAIN: LXI H,0050   // HL = 0050h (endereço do dado)
MOV C,M            // C = MEM[HL] (carregar número para calcular o fatorial)
PUSH B             // Empilhar número como parâmetro
CALL F_FAT         // Chamar função FAT
STA 0052           // Salvar resultado em 0052h
HLT                // Encerrar o programa
END:

// Área de dados
// dado01: número inicial a ser calculado
// dado02: espaço para armazenar o resultado
// Exemplo: dado01 = 05h (número), dado02 = 00h (resultado)

