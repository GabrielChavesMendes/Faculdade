// Guia_1602.txt
// 854157 - Matheus Felipe Cavalcanti Xavier
// Divisão de dois números de 8 bits
JMP MAIN          // Função principal

// Função IDIV
F_IDIV: MVI A,00  // A = 0 (inicializa o quociente)
       MOV D,B    // D = B (dividendo)
       MOV E,C    // E = C (divisor)

IDIV_LOOP: CMP D   // Verifica se D < E
           JC END_IDIV // Se D < E, termina
           SUB E    // D = D - E
           INR A    // A = A + 1
           JMP IDIV_LOOP // Repete o loop

END_IDIV: RET      // Retorna o quociente em A

// Função principal
MAIN:    LXI H,0050 // HL = endereço inicial (dados)
         MOV B,M    // B = MEM[HL] (dado01)
         INX H      // Incrementa HL
         MOV C,M    // C = MEM[HL] (dado02)
         CALL F_IDIV // Chama F_IDIV
         STA 0052   // Salva o resultado em MEM[0052]
         HLT        // Fim do programa
