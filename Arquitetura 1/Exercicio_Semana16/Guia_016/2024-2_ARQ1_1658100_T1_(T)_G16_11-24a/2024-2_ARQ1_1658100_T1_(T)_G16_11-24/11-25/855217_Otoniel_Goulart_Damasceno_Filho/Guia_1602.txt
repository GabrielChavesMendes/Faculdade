// Aluno Otoniel Filho
// Código 1524526
// Matricula 855217

// Calcular o quociente inteiro (IDIV) entre dois números de 8 bits
JMP MAIN  // Desvio para a área principal

// Função IDIV (Divisão por subtração sucessiva)
F_IDIV:
    MVI D, 00      // Inicializa D = 0 (quociente)
    MOV B, C       // B recebe o divisor (dado2)
    MOV A, M       // A recebe o dividendo (dado1)
    
IDIV_LOOP:
    CMP B          // Compara A (dividendo) com B (divisor)
    JC DIV_DONE    // Se A < B, termina a divisão
    SUB B          // A = A - B (subtração do divisor do dividendo)
    INX D          // Incrementa D (quociente)
    JMP IDIV_LOOP  // Repete o processo até A < B
    
DIV_DONE:
    MOV M, D       // Armazena o quociente em dado3
    RET            // Retorna da função

MAIN:
    LXI H, 0050h   // Carrega o endereço base dos dados
    MOV A, M       // A recebe dado1 (dividendo)
    INX H          // Avança para dado2
    MOV C, M       // C recebe dado2 (divisor)
    CALL F_IDIV    // Chama a função F_IDIV
    HLT            // Finaliza a execução

END
// Área de dados
dado1: 0Ah  // Dividendo (10 em decimal)
dado2: 02h  // Divisor (2 em decimal)
dado3: 00h  // Quociente (inicialmente 0)
