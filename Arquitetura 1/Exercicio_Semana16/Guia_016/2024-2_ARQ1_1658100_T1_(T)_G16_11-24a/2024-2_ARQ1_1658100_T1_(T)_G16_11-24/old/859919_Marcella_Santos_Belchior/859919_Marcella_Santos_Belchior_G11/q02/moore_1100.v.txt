/*
Guia_1102.v
859919 - Marcella Santos Belchior
*/
// --------------
// --- Moore FSM
// --------------
`define found 1
`define notfound 0

module moore_1102 (y, x, clk, reset);
    output reg y;           // Saída
    input x;                // Entrada
    input clk, reset;       // Clock e Reset
    reg [2:0] E1;           // Estado atual
    reg [2:0] E2;           // Próximo estado

    // Identificadores de estados
    parameter 
        start  = 3'b000,
        id1    = 3'b001,
        id11   = 3'b011,
        id110  = 3'b010,
        id1101 = 3'b110;

    // Lógica de transição de estados
    always @(x or E1) begin
        case (E1)
            start: 
                if (x)
                    E2 = id1;
                else
                    E2 = start;

            id1: 
                if (x)
                    E2 = id11;
                else
                    E2 = start;

            id11: 
                if (!x)
                    E2 = id110;
                else
                    E2 = id11;

            id110: 
                if (x)
                    E2 = id1101;
                else
                    E2 = start;

            id1101: 
                if (x)
                    E2 = id11;
                else
                    E2 = start;

            default: 
                E2 = 3'bxxx; // Estado indefinido
        endcase
    end

    // Atualização do estado atual
    always @(posedge clk or negedge reset) begin
        if (!reset)
            E1 <= start; // Reseta para o estado inicial
        else
            E1 <= E2;    // Transição para o próximo estado
    end

    // Lógica de saída (baseada no estado atual)
    always @(E1) begin
        case (E1)
            id1101: y = `found;  // Saída é 1 somente no estado id1101
            default: y = `notfound;
        endcase
    end
endmodule
